<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 initialize="init()"
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.core.UIComponent;
			
			import spark.components.supportClasses.DropDownListBase;
			import spark.components.supportClasses.TextBase;
			import spark.events.IndexChangeEvent;
			
			
			protected function init():void
			{
				__applyLabel();
			}
			
			public function setLabel(xLabel:String):void
			{
				this.lb_label.text = xLabel;
			}
			
			public function getHexData():String
			{
				var gRetrunStr:String = "FFFF"
				if(this.ddl_key_alone.selectedItem && this.ddl_key_compound.selectedItem)
				{
					var gIndexCompound:int = this.ddl_key_compound.selectedItem.index;
					var gIndexAlone:int = this.ddl_key_alone.selectedItem.index;
					if(gIndexCompound > 0 && gIndexCompound < 255 && gIndexAlone > 0 && gIndexAlone < 255)
					{
						gRetrunStr = HexParser.getHexByte(gIndexCompound) + HexParser.getHexByte(gIndexAlone); 
					}
				}
				
				return gRetrunStr;
			}
			
			public function setIndexes(xCompoundIndex:int, xAloneIndex:int):void
			{
				if(xCompoundIndex > 0 && xCompoundIndex < 255 && xAloneIndex > 0 && xAloneIndex < 255)
				{
					__select(this.ddl_key_compound, xCompoundIndex);
					__select(this.ddl_key_alone, xAloneIndex);
				}
			}
			protected function __select(xDdl:DropDownList, xIdx:int):void
			{
				// :Vector.<Vector.<KeycapData>>
				var gLen:int = xDdl.dataProvider.length;
				for(var i:int = 0; i < gLen; ++i){
					var gItem:Object = xDdl.dataProvider.getItemAt(i);
					if(gItem == null) continue;
					
					if(xIdx == gItem.index){
						xDdl.selectedIndex = i;
						return;
					}
					
				}
				xDdl.selectedIndex = -1;
			}
			
			public function setDataProviders(xCompoundKeys:Array, xAloneKeys:Array):void
			{
				this.ddl_key_compound.dataProvider = new ArrayList(xCompoundKeys);
				this.ddl_key_alone.dataProvider = new ArrayList(xAloneKeys);
				
			}
			
			protected function __change(event:IndexChangeEvent):void
			{
				__applyLabel();
				
			}
			
			private function __applyLabel():void
			{
				var gDefaultLabel:String = "None";
				if(this.ddl_key_alone.selectedItem && this.ddl_key_compound.selectedItem)
				{
					var gIndexCompound:int = this.ddl_key_compound.selectedItem.index;
					var gIndexAlone:int = this.ddl_key_alone.selectedItem.index;
					if(gIndexCompound > 0 && gIndexCompound < 255 && gIndexAlone > 0 && gIndexAlone < 255)
					{
						var gLabelCompound:String = this.ddl_key_compound.selectedItem.label;
						var gLabelAlone:String = this.ddl_key_alone.selectedItem.label;
					
						this.lb_key_name.text = gLabelCompound + "_" + gLabelAlone;
						this.lb_key_name.setStyle( "backgroundColor", 0xAAAAEE);
					}else{
						this.lb_key_name.text = gDefaultLabel;
						this.lb_key_name.setStyle( "backgroundColor", undefined);
					}
						
				}else{
					this.lb_key_name.text = gDefaultLabel;
					this.lb_key_name.setStyle( "backgroundColor", undefined);
				}
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:HorizontalLayout gap="0" verticalAlign="middle">
		</s:HorizontalLayout>
	</s:layout>
	<s:DropDownList id="ddl_key_compound" width="100%" change="__change(event)">
		<s:layout>
			<s:VerticalLayout gap="0"
							  horizontalAlign="contentJustify"
							  requestedRowCount="12" />
		</s:layout>
	</s:DropDownList>		
	<s:Spacer width="3" />
	<s:Label width="10" text="+" textAlign="center"/>
	<s:Spacer width="3" />
	<s:DropDownList id="ddl_key_alone" width="100%" lineHeight="250" change="__change(event)">
		<s:layout>
			<s:VerticalLayout gap="0"
							  horizontalAlign="contentJustify"
							  requestedRowCount="10" />
		</s:layout>
	</s:DropDownList>
	<s:Spacer width="1" />
	<s:Label id="lb_label" width="70" textAlign="right"/>
	<s:Spacer width="3" />
	<s:Label width="10" text="=" textAlign="center"/>
	<s:Spacer width="5" />
	<s:Label id="lb_key_name" width="120" height="20" textAlign="center" verticalAlign="middle"/>
	
</s:Group>
