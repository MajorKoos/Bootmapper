<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" clipAndEnableScrolling="true"
					minHeight="21"
					>
	
	<fx:Script>
		<![CDATA[
			import flash.text.engine.FontWeight;
			
			import flashx.textLayout.formats.TextDecoration;
			override public function prepare(hasBeenRecycled:Boolean):void {			
				if(data && column){
					lblData.text = String(data[column.dataField]["label"]);
					draw();
				}
			}
			
			private function draw():void
			{				
				/* if(data && column){
					this.color_rect.color = data[column.dataField]["color"];
				} */
				var gCellObj:CellObject = data[column.dataField] as CellObject;
				
				if(CellObject.cellColorDiff == gCellObj.color)
				{
					//diff
					lblData.setStyle("backgroundColor", CellObject.cellColorDiff);
					lblData.setStyle("backgroundAlpha", 1);
					this.color_rect.alpha = 0;
					lblData.setStyle("textDecoration", TextDecoration.NONE);
					lblData.setStyle("paddingLeft", 10);
					lblData.setStyle("paddingRight", 10);
					
					//						lblData.setStyle("textDecoration", TextDecoration.UNDERLINE);
					//						lblData.setStyle("fontWeight", FontWeight.BOLD);
				}
				else if(CellObject.cellColorDiffSpace == gCellObj.color)
				{
					// diff with space
					lblData.setStyle("backgroundColor", CellObject.cellColorDiff);
					lblData.setStyle("backgroundAlpha", 1);
					this.color_rect.alpha = 0;
					lblData.setStyle("textDecoration", TextDecoration.UNDERLINE);
					
					lblData.setStyle("paddingLeft", 10);
					lblData.setStyle("paddingRight", 10);
				}
				else
				{
//					lblData.setStyle("backgroundColor", data[column.dataField]["color"]);
					lblData.setStyle("backgroundAlpha", 0);
					this.color_rect.alpha = 0;
					lblData.setStyle("textDecoration", TextDecoration.NONE);
					
					lblData.setStyle("paddingLeft", 0);
					lblData.setStyle("paddingRight", 0);
					//						lblData.setStyle("textDecoration", TextDecoration.NONE);
					//						lblData.setStyle("fontWeight", FontWeight.NORMAL);
				}
				
				if(gCellObj.isFocused)
				{					
					this.color_rect.color = CellObject.cellColorFocus;
					this.color_rect.alpha = 0.3;					
				}
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				draw();
			}
			
		]]>
	</fx:Script>
	
	<s:Rect top="0" bottom="0" left="0" right="0">				
		<s:fill>
			<s:SolidColor id="color_rect" />
		</s:fill>
	</s:Rect>	
	<s:Label id="lblData" top="7" left="7"/>
	
</s:GridItemRenderer>
